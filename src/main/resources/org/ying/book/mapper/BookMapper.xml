<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.ying.book.mapper.BookMapper">
  <resultMap id="BaseResultMap" type="org.ying.book.pojo.Book">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="published_year" jdbcType="VARCHAR" property="publishedYear" />
    <result column="isbn" jdbcType="VARCHAR" property="isbn" />
    <result column="available" jdbcType="BIT" property="available" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="is_deleted" jdbcType="BIT" property="deleted" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="publisher" jdbcType="VARCHAR" property="publisher" />
    <result column="is_recommend" jdbcType="BIT" property="isRecommend" />
    <result column="is_banner" jdbcType="BIT" property="isBanner" />
    <association property="library" column="id" javaType="org.ying.book.pojo.Library" select="selectLibraryByBookId"/>
    <association property="reservation" column="id" javaType="org.ying.book.pojo.ReservationView" select="selectReservationByBookId"/>
    <association property="borrowing" column="id" javaType="org.ying.book.pojo.BorrowingView" select="selectBorrowingByBookId"/>
    <collection property="files" column="id" ofType="org.ying.book.pojo.File" select="selectFilesByBookId"/>
  </resultMap>
  <select id="selectLibraryByBookId" parameterType="java.lang.Integer" resultMap="org.ying.book.mapper.LibraryMapper.BaseResultMap">
    select * from public.libraries l join public.library_books lb on l.id = lb.library_id where lb.book_id = #{bookId}
  </select>
  <select id="selectFilesByBookId" parameterType="java.lang.Integer" resultMap="org.ying.book.mapper.FileMapper.BaseResultMap">
    select * from public.files f join public.books_files bf on f.id = bf.file_id where bf.book_id = #{bookId}
  </select>
  <select id="selectBorrowingByBookId" parameterType="java.lang.Integer" resultMap="org.ying.book.mapper.BorrowingViewMapper.BaseResultMap">
    select * from public.borrowings_view bv where bv.book_id = #{bookId} and bv.status = 'OVERDUE_NOT_RETURNED' and bv.status = 'NOT_RETURNED'
  </select>
  <select id="selectReservationByBookId" parameterType="java.lang.Integer" resultMap="org.ying.book.mapper.ReservationMapper.BaseResultMap">
    select * from public.borrowings_view bv where bv.book_id = #{bookId} and bv.status = 'NOT_BORROWABLE' and bv.status = 'BORROWABLE'
  </select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, author, category_id, published_year, isbn, available, created_at, updated_at, 
    is_deleted, description, publisher, is_recommend, is_banner
  </sql>
  <sql id="Base_Column_List_2">
    b.id as id, title, author, category_id, published_year, isbn, available, b.created_at as created_at, b.updated_at as updated_at,
    b.is_deleted as is_deleted, description, publisher, is_recommend, is_banner
  </sql>
  <select id="selectByExample" parameterType="org.ying.book.pojo.BookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from public.books
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from public.books
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from public.books
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.ying.book.pojo.BookExample">
    delete from public.books
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.ying.book.pojo.Book" useGeneratedKeys="true">
    insert into public.books (title, author, category_id, 
      published_year, isbn, available, 
      created_at, updated_at, is_deleted, 
      description, publisher, is_recommend, 
      is_banner)
    values (#{title,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, #{categoryId,jdbcType=INTEGER}, 
      #{publishedYear,jdbcType=VARCHAR}, #{isbn,jdbcType=VARCHAR}, #{available,jdbcType=BIT}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT}, 
      #{description,jdbcType=VARCHAR}, #{publisher,jdbcType=VARCHAR}, #{isRecommend,jdbcType=BIT}, 
      #{isBanner,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.ying.book.pojo.Book" useGeneratedKeys="true">
    insert into public.books
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="publishedYear != null">
        published_year,
      </if>
      <if test="isbn != null">
        isbn,
      </if>
      <if test="available != null">
        available,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="deleted != null">
        is_deleted,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="publisher != null">
        publisher,
      </if>
      <if test="isRecommend != null">
        is_recommend,
      </if>
      <if test="isBanner != null">
        is_banner,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="publishedYear != null">
        #{publishedYear,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null">
        #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        #{available,jdbcType=BIT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null">
        #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="isRecommend != null">
        #{isRecommend,jdbcType=BIT},
      </if>
      <if test="isBanner != null">
        #{isBanner,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ying.book.pojo.BookExample" resultType="java.lang.Long">
    select count(*) from public.books b
    left join public.library_books lb on lb.book_id = b.id
    left join public.libraries l on l.id = lb.library_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update public.books
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=INTEGER},
      </if>
      <if test="row.title != null">
        title = #{row.title,jdbcType=VARCHAR},
      </if>
      <if test="row.author != null">
        author = #{row.author,jdbcType=VARCHAR},
      </if>
      <if test="row.categoryId != null">
        category_id = #{row.categoryId,jdbcType=INTEGER},
      </if>
      <if test="row.publishedYear != null">
        published_year = #{row.publishedYear,jdbcType=VARCHAR},
      </if>
      <if test="row.isbn != null">
        isbn = #{row.isbn,jdbcType=VARCHAR},
      </if>
      <if test="row.available != null">
        available = #{row.available,jdbcType=BIT},
      </if>
      <if test="row.createdAt != null">
        created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updatedAt != null">
        updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.deleted != null">
        is_deleted = #{row.deleted,jdbcType=BIT},
      </if>
      <if test="row.description != null">
        description = #{row.description,jdbcType=VARCHAR},
      </if>
      <if test="row.publisher != null">
        publisher = #{row.publisher,jdbcType=VARCHAR},
      </if>
      <if test="row.isRecommend != null">
        is_recommend = #{row.isRecommend,jdbcType=BIT},
      </if>
      <if test="row.isBanner != null">
        is_banner = #{row.isBanner,jdbcType=BIT},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update public.books
    set id = #{row.id,jdbcType=INTEGER},
      title = #{row.title,jdbcType=VARCHAR},
      author = #{row.author,jdbcType=VARCHAR},
      category_id = #{row.categoryId,jdbcType=INTEGER},
      published_year = #{row.publishedYear,jdbcType=VARCHAR},
      isbn = #{row.isbn,jdbcType=VARCHAR},
      available = #{row.available,jdbcType=BIT},
      created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      is_deleted = #{row.deleted,jdbcType=BIT},
      description = #{row.description,jdbcType=VARCHAR},
      publisher = #{row.publisher,jdbcType=VARCHAR},
      is_recommend = #{row.isRecommend,jdbcType=BIT},
      is_banner = #{row.isBanner,jdbcType=BIT}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.ying.book.pojo.Book">
    update public.books
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="publishedYear != null">
        published_year = #{publishedYear,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null">
        isbn = #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        available = #{available,jdbcType=BIT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        is_deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null">
        publisher = #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="isRecommend != null">
        is_recommend = #{isRecommend,jdbcType=BIT},
      </if>
      <if test="isBanner != null">
        is_banner = #{isBanner,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.ying.book.pojo.Book">
    update public.books
    set title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      published_year = #{publishedYear,jdbcType=VARCHAR},
      isbn = #{isbn,jdbcType=VARCHAR},
      available = #{available,jdbcType=BIT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      is_deleted = #{deleted,jdbcType=BIT},
      description = #{description,jdbcType=VARCHAR},
      publisher = #{publisher,jdbcType=VARCHAR},
      is_recommend = #{isRecommend,jdbcType=BIT},
      is_banner = #{isBanner,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="org.ying.book.pojo.BookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List_2" />
    from public.books b
    left join public.library_books lb on lb.book_id = b.id
    left join public.libraries l on l.id = lb.library_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>